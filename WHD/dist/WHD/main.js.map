{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/quests/quests.component.css","webpack:///./src/app/quests/quests.component.html","webpack:///./src/app/quests/quests.component.ts","webpack:///./src/app/resolver/quests.resolver.ts","webpack:///./src/app/services/quests.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { QuestsComponent } from './quests/quests.component';\nimport { QuestsResolver } from './resolver/quests.resolver';\n\nconst routes: Routes = [\n\n  {\n    path: '',\n    component: MainComponent\n},\n\n{\n  path: 'questions&answers',\n  component: QuestsComponent,\n  resolve: {\n    data: QuestsResolver\n  }\n}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WHD';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { QuestsComponent } from './quests/quests.component';\nimport { QuestsResolver } from './resolver/quests.resolver';\nimport { QuestsService } from './services/quests.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    QuestsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    QuestsResolver,\n    QuestsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  main works!\\n</p>\\n\\n<a href=\\\"/questions&answers\\\">Q&A</a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0cy9xdWVzdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  quests works!\\n</p>\\n<p>{{quests.title}}</p>\"","import { Component, OnInit } from '@angular/core';\nimport { QuestsService } from '../services/quests.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QuestsModel } from '../models/quests.model';\n\n@Component({\n  selector: 'app-quests',\n  templateUrl: './quests.component.html',\n  styleUrls: ['./quests.component.css']\n})\n\nexport class QuestsComponent implements OnInit {\n\n  quests: QuestsModel[];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n      this.route.data.subscribe(routeData => {\n        let data = routeData['data'];\n        if (data) {\n          this.quests = data.categories;\n        }\n      })\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from \"@angular/router\";\nimport { QuestsService } from \"../services/quests.service\";\n\n@Injectable()\nexport class QuestsResolver implements Resolve<any> {\n\n  constructor(private questsService: QuestsService) { }\n\n  resolve() {\n    return new Promise((resolve, reject) => {\n\n      let breadcrumbs = [\n        { url: '/questions&answers', label: 'Q&A' }\n      ];\n\n      //get quests from local json file\n      this.questsService.getQuests()\n      .then(\n        quests => {\n          return resolve({\n            categories: quests,\n            breadcrumbs: breadcrumbs\n          });\n        },\n        err => {\n          return resolve(null);\n        }\n      )\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n//import { Observable } from \"rxjs/Observable\";\nimport { QuestsModel } from \"../models/quests.model\";\n\n@Injectable()\nexport class QuestsService {\n\n  constructor(private http: Http){}\n\n  getQuests(): Promise<QuestsModel[]> {\n    return this.http.get(\"./assets/quests.json\")\n    .toPromise()\n    .then(res => res.json() as QuestsModel[])\n  }\n\n  getQuestsByID(id: number){\n    return this.getQuests()\n    .then(quests =>{\n      return quests.find((quests) => {\n        return quests.id == id;\n      });\n    })\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}